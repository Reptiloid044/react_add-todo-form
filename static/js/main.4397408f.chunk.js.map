{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","completed","title","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","App","useState","SetTitle","setUserId","validUser","setValidUser","validTitle","setValidTitle","setFieldValue","event","target","value","Error","onSubmit","preventDefault","newTodo","Math","max","trim","push","action","method","type","placeholder","onChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4397408f.chunk.js","sourcesContent":["import { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoIfo--comleted': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user\n        ? <UserInfo user={user} />\n        : 'Add user'}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => <TodoInfo todo={todo} key={todo.id} />)}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList/index';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find((user) => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, SetTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [validUser, setValidUser] = useState(false);\n  const [validTitle, setValidTitle] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const maxId = Math.max(...todos.map((todo) => todo.id));\n\n    const newTodo = {\n      id: maxId + 1,\n      title,\n      completed: false,\n      userId,\n      user: getUser(userId),\n    };\n\n    if (!userId) {\n      setValidUser(true);\n    }\n\n    if (!title.trim()) {\n      setValidTitle(true);\n    }\n\n    if (userId && title.trim()) {\n      todos.push(newTodo);\n      SetTitle('');\n      setUserId(0);\n      setValidUser(false);\n      setValidTitle(false);\n    }\n  };\n\n  type Props =\n    React.ChangeEvent<HTMLSelectElement> | React.ChangeEvent<HTMLInputElement>;\n\n  const setFieldValue = (event: Props) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'title':\n        SetTitle(value);\n        setValidTitle(false);\n\n        break;\n\n      case 'userId':\n        setUserId(+value);\n        setValidUser(false);\n\n        break;\n\n      default:\n        throw new Error('Please enter a title. Please choose a user.');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={handleSubmit}\n        action=\"/api/users\"\n        method=\"POST\"\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              name=\"title\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={setFieldValue}\n            />\n          </label>\n\n          {validTitle\n          && <span className=\"Error\">Please enter a title.</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              name=\"UserId\"\n              value={userId}\n              onChange={setFieldValue}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {usersFromServer.map(({ id, name }) => {\n                return (\n                  <option\n                    value={id}\n                    key={id}\n                  >\n                    {name}\n                  </option>\n                );\n              })}\n            </select>\n          </label>\n\n          {validUser\n            && <span className=\"Error\">Please choose a user.</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}